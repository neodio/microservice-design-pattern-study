plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.8'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2024.0.1")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.modelmapper:modelmapper:3.2.2'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'com.github.erosb:everit-json-schema:1.14.5'

    // Micrometer Tracing (OpenTelemetry 연동 필수)
    implementation 'io.micrometer:micrometer-tracing-bridge-otel'
    // OpenTelemetry Zipkin Exporter
    implementation 'io.opentelemetry:opentelemetry-exporter-zipkin'
    // OpenTelemetry Auto Configuration
    implementation 'io.opentelemetry:opentelemetry-sdk-extension-autoconfigure'
    // JSON 로그 출력 (Logstash)
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
