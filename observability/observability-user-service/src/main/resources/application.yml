server:
  port: 8081

spring:
  application:
    name: user-service
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
      path: /h2-console
  jpa:
    hibernate:
      ddl-auto: update
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:testdb
    username: sa
    password:

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

greeting:
  message: Welcome to the Simple E-commerce.

logging:
  level:
    com.example.userservice.client: DEBUG
  pattern:
    correlation: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'

management:
  endpoints:
    web:
      exposure:
        include: "*"
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: "http://localhost:9411/api/v2/spans"
gateway:
  ip: 127.0.0.1

token:
  expiration_time: 86400000
  secret: user_token_test_for_jwt_token_20250328

resilience4j:
  retry:
    configs:
      default:
        maxAttempts: 3            # 최대 재시도 횟수 (최초 호출 포함)
        waitDuration: 1000        # 재시도 간 대기 시간(ms)
        retryExceptions:          # 재시도할 예외 목록
          - java.io.IOException
        ignoreExceptions:         # 무시할 예외 목록 (재시도하지 않을 예외)
          - java.lang.NullPointerException
    instances:
      orderService:
        baseConfig: default     # configs에서 지정한 default 사용
  circuitbreaker:
    instances:
      orderService:
        sliding-window-size: 5             # 슬라이딩 윈도우 크기 (최근 5번의 호출 기록으로 계산)
        minimum-number-of-calls: 5          # 계산에 포함되기 위한 최소 호출 수
        failure-rate-threshold: 50          # 실패율 임계치(실패율 50% 초과 시 회로 열기)
        wait-duration-in-open-state: 10s    # 회로 열린 후 닫히기까지 대기 시간
  thread-pool-bulkhead:               # 비동기 작업용 CompletableFuture + @Async
    instances:
      orderService:
        max-thread-pool-size: 1       # 최대 스레드 수
        core-thread-pool-size: 1      # 기본 스레드 수
        queue-capacity: 1             # 대기 큐에 1개까지 요청 저장
  timelimiter:
    instances:
      orderService:
        timeout-duration: 2s          # 응답 타임아웃 시간 (2초)
        cancel-running-future: true   # 타임아웃 시 진행 중인 작업 중단
